{
  "_args": [
    [
      {
        "raw": "../read-module-tree/",
        "scope": null,
        "escapedName": null,
        "name": null,
        "rawSpec": "../read-module-tree/",
        "spec": "/Users/rebecca/code/read-module-tree",
        "type": "directory"
      },
      "/Users/rebecca/code/llmod"
    ]
  ],
  "_from": "../read-module-tree",
  "_id": "read-module-tree@1.0.0",
  "_inCache": true,
  "_installable": true,
  "_location": "/read-module-tree",
  "_phantomChildren": {},
  "_requested": {
    "raw": "../read-module-tree/",
    "scope": null,
    "escapedName": null,
    "name": null,
    "rawSpec": "../read-module-tree/",
    "spec": "/Users/rebecca/code/read-module-tree",
    "type": "directory"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "file:../read-module-tree",
  "_shasum": "71f6e7998e6ec8d4522a08c3ca23f9f2013d5c89",
  "_shrinkwrap": null,
  "_spec": "../read-module-tree/",
  "_where": "/Users/rebecca/code/llmod",
  "author": {
    "name": "Rebecca Turner",
    "email": "me@re-becca.org",
    "url": "http://re-becca.org/"
  },
  "dependencies": {
    "readable-stream": "^2.0.2",
    "readdir-scoped-modules": "^1.0.2"
  },
  "description": "By contrast with `read-package-tree`, this reads a tree of modules as understood by node itself. A valid module can just have an `index.js` with no metadata– not a valida package, but absolutely a valid module.",
  "devDependencies": {
    "standard": "^5.3.1",
    "tap": "^1.4.1",
    "through2": "^2.0.0"
  },
  "gitHead": "b6079396ebf3377443eb20515a53d1c4210eeeea",
  "keywords": [],
  "license": "ISC",
  "main": "index.js",
  "name": "read-module-tree",
  "optionalDependencies": {},
  "readme": "# read-module-tree\n\nBy contrast with `read-package-tree`, this reads a tree of modules as\nunderstood by node itself. A valid module can just have an `index.js` with\nno metadata– not a valida package, but absolutely a valid module.\n\nAlso by contrast with `read-package-tree` this does not return a tree,\ninstead it streams an ordered list of modules. And that order is breadth\nfirst, alphabetized by `localeCompare`. The first node emitted will always\nbe the top of the tree.\n\n## Usage\n\n```\nvar readModuleTree = require('read-module-tree')\nvar through2 = require('through2')\nnew readModuleTree().pipe(through2(function (module, next) {\n  console.log(module.name)\n  console.log(module.path)\n  next()\n})\n```\n",
  "readmeFilename": "README.md",
  "scripts": {
    "tap": "tap test/*.js",
    "test": "standard *.js test/*.js && tap test/*.js"
  },
  "version": "1.0.0"
}
